const ENV = require('dotenv').config();

if (ENV.error) {
    console.log('no ENV data')
}

const MODES = {
    pure: 'pure',
    pureExample: 'pureExample',
    jsExport: 'export',
}

let MODE = MODES.pure
const { parsed: { BUILD_NATIVE_MODE } } = ENV
if (BUILD_NATIVE_MODE) {
    Object.values(MODES).includes(BUILD_NATIVE_MODE) && (MODE = BUILD_NATIVE_MODE)
}
console.log('-- build mode:', MODE);
const fs = require('fs');
const InputfilePath = './dist/bundle.js'
const data = fs.readFileSync(InputfilePath, 'utf8').replace(/"__UNIQ_NAME_CHARTS__"/g, 'CHART_ID').replace(/"__UNIQ_DATA_CHARTS__"/g, 'CHART_DATA');
fs.writeFileSync(InputfilePath, `${MODE === MODES.jsExport ? 'module.exports=' : ''}function renderCharts(CHART_ID,CHART_DATA){`)
fs.appendFileSync(InputfilePath, data + '}')
if (MODE === MODES.pureExample) {
    const testData = `{"columns":{"x":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29],"y0":[0,0.4903112892473547,1.701496987870005,0.09740770049444536,0.38312520273186657,0.07782642546681484,3.810363812135455,5.138487187044232,7.89298333943521,1.221559951091224,3.366493620027955,8.31195602596381,11.159719668146954,7.336207235250486,6.586559335328359,4.928583624553376,12.769458533331381,16.08496535620284,17.19287994739343,7.627644438749191,10.305967495452858,10.73071641099219,5.953661428216396,5.259579985242728,15.237619011885123,14.680400657460602,1.601931572486659,22.06185992610545,16.541651257893257,0.9230766129866548],"y1":[0,1.3443877128657888,2.552243429297274,5.446151663870228,7.101657540674406,7.468251829001407,10.119680741519886,7.167866103383082,1.5272413239731293,3.365444266922021,19.999682384525343,20.691360095407735,8.250086805581448,9.850573102811202,13.393364820182253,21.936716908429837,19.836213588113864,22.105416241115243,16.24381954473024,30.85734270463558,5.84341334229622,25.317983211502106,37.92863096215874,28.707150106052403,24.9855524492182,2.9687230868430836,44.081524008940015,7.193594158422195,12.33756384359202,27.672882059598496],"y2":[0.006850274052076832,1.6655585549428058,2.9480089363971187,3.209331205704385,4.7183374691569,5.755213411131362,6.889445255051727,7.501401380979158,8.438985237633684,9.363816699525943,10.029910465197428,11.721196637567768,12.627388015194342,13.618493857985007,14.66106922549596,15.749265138353655,16.251842181454236,17.138712866329556,18.987598850932756,19.08284697420631,20.677992733411266,21.492471310643616,22.350567643641313,23.886608454086875,24.279497025904284,25.008904773367473,26.795594877750215,27.907682553730474,28.176735527259343,29.72908836592707]},"types":{"y0":"line","y1":"line","y2":"line","x":"x"},"names":{"y0":"gross","y1":"gross cost 2","y2":"market","x":"time"},"colors":{"y0":"#3DC23F","y1":"#F34C44","y2":"#004E00"}}`
    fs.appendFileSync(InputfilePath, `const testData=${testData};renderCharts("charts example",testData)`)
}
